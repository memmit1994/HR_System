continue
(User.find(params['task']['user_id']).committees.pluck(:id).map(&:to_s)).include?(params['task']['committee_id'])
(User.find(params['task']['user_id']).committees.pluck(:id).map(&:to_s))
(User.find(params['task']['user_id']).committees.pluck(:id))
(User.find(params['task']['user_id']).committees.pluck(:id)).include?(params['task']['committee_id'])
params['task']['committee_id']
User.find(params['task']['user_id']).committees.pluck(:name)
User.find(params['task']['user_id']).committees
User.find(params['task']['user_id'])
params
q
continue
time
shift.start
time.between?(shift.start,shift.end) and not (Task.where(user_id: user.id,shift_id:shift.id).count > 0)
time.between?(shift.start,shift.end)
c
time.between?(shift.start,shift.end)
c
time.between?(shift.start,shift.end)
time.between?(shift.start,shift.end) and not (Task.where(user_id: user.id,shift_id:shift.id).count > 0)
c
not (Task.where(user_id: user.id,shift_id:shift.id).count > 0)
time.between?(shift.start,shift.end)
time
res
continue
is_time_in_shifts(user,session.start,shifts)
res
continue
res
time.between?(shift.start,shift.end) and not (Task.where(user_id: user.id,shift_id:shift.id).count > 0)
not (Task.where(user_id: user.id,shift_id:shift.id).count > 0)
time.between?(shift.start,shift.end)
shift.end
shift.start
continue
shift.start
time
time.between?(shift.start,shift.end) and not (Task.where(user_id: user.id,shift_id:shift.id).count > 0)
q
continue
y
x
continue
is_time_in_shifts(user,Seminar.all.first.start, shifts)
is_time_in_shifts(user,time, shifts)
y
x
continue
y
x
continue
is_time_in_shifts(user,time, shifts)
not (Task.where(user_id: user.id,shift_id:shift.id).count > 0)
time.between?(shift.start,shift.end)
continue
conitnue
shift.start
time.between?(shift.start,shift.end)
not (Task.where(user_id: user.id,shift_id:shift.id).count > 0)
continue
not (Task.where(user_id: user.id,shift_id:shift.id).count > 0)
time.between?(shift.start,shift.end)
shift.start
time
continue
s
n
continue
step
user
shifts
continue
params
continue
params['user_id']
User.find(params['user_id']
User.find(params['user_id']).committees.pluck(:id)).include?(params['committee_id'])
@task
continue
@shifts_unsubmitted_before 
@shifts_unsubmitted_before[shift.event.id] 
n
@shifts_unsubmitted_before[shift.event.id] 
n
Available.where(user_id: current_user.id, shift_id: shift.id).count == 0
Available.where(user_id: current_user.id, shift_id: shift.id).count 
continue
q
n
step
continue
Available.all
current_user
@shifts_unsubmitted_before
continue
@shifts
var local
var 
params
continue
user.position
n
step
var local
continue
var local
next
var local
var
vars
continue
params["available"]["shift_id"].each do |x| p x
params["available"]["shift_id"].each do |x|
params["available"]["shift_id"]
params["available"]
params
var
vars
quit
n
quit
next
quit
n
step
n
step
var all
